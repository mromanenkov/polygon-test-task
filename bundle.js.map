{"version":3,"sources":["webpack:///webpack/bootstrap 2e35ba517d8e96e76731","webpack:///./main.js","webpack:///./canvas.js","webpack:///./cursor.js","webpack:///./utils.js","webpack:///./polygon.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;AC1CD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;;AAEA,yBAAyB,yBAAyB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C,sF;AACA;AACA;AACA;;AAEA;;;;;;;;;ACvHA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;;AAEA;;AAEA;;;;;;;;;ACdA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2e35ba517d8e96e76731","import Canvas from './canvas';\nimport cursor from './cursor';\nimport Polygon from './polygon';\n\nconst polygonPointsA = [[100, 100], [200, 100], [200, 200], [100, 200]];\nconst polygonPointsB = [[300, 400], [450, 300], [500, 300], [470, 350]];\nconst polygonPointsC = [[0, 20], [20, 0], [40, 10], [40, 30], [30, 40]];\n\nconst strokeColor = '#000';\nconst fillColor = '#f00';\nconst poly1 = new Polygon(polygonPointsA, strokeColor, fillColor);\nconst poly2 = new Polygon(polygonPointsB, strokeColor, fillColor);\nconst poly3 = new Polygon(polygonPointsC, strokeColor, fillColor);\n\nconst setting = {\n  width: window.innerWidth - window.innerWidth * 0.02,\n  height: window.innerHeight - window.innerWidth * 0.02,\n  padding: 30,\n  polygonMargin: 20,\n};\n\nconst canvas = new Canvas('example', setting);\n\nwindow.addEventListener('load', canvas.init());\n\nconst polygons = [poly1, poly2, poly3];\ncanvas.addArr(polygons);\n\ncanvas.element.addEventListener('mousedown', (e) => {\n  cursor.cursorDownPos = [e.offsetX, e.offsetY];\n  canvas.selectedObject = canvas.getSelectedObject(cursor.cursorDownPos);\n});\n\ncanvas.element.addEventListener('mouseup', (e) => {\n  cursor.cursorUpPos = [e.offsetX, e.offsetY];\n  const offset = cursor.getOffset();\n\n  if (canvas.selectedObject) {\n    canvas.selectedObject.shift(offset);\n    canvas.update();\n  }\n  canvas.selectedObject = null;\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./main.js\n// module id = 0\n// module chunks = 0","import utils from './utils';\n\nclass Canvas {\n  constructor(id, setting, objects) {\n    this.setting = setting;\n    this.objects = objects || [];\n    this.selectedObject = false;\n    this.element = document.getElementById(id);\n    this.ctx = this.element.getContext('2d');\n    this.nextObjListPos = [this.setting.padding, this.setting.padding];\n  }\n\n  init() {\n    this.element.width = this.setting.width;\n    this.element.height = this.setting.height;\n  }\n\n  add(object) {\n    this.objects.push(object);\n    object.setFrame();\n\n    const offset = [this.nextObjListPos[0] - object.frame[0][0], this.nextObjListPos[1] - object.frame[0][1]];\n\n    object.shift(offset);\n    object.setFrame();\n    this.nextObjListPos[1] = object.frame[object.frame.length - 1][1] + this.setting.polygonMargin;\n    this.update();\n  }\n\n  addArr(objectArr) {\n    objectArr.forEach((object) => {\n      this.add(object);\n    });\n  }\n\n  draw(object, isFill) {\n    this.ctx.fillStyle = object.fillColor;\n    this.ctx.strokeStyle = object.strokeColor;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(object.points[0], object.points[1]);\n    object.points.forEach((point, index) => {\n      this.ctx.lineTo(point[0], point[1]);\n    });\n    this.ctx.closePath();\n    this.ctx.stroke();\n\n    if (isFill) this.ctx.fill();\n  }\n\n  erase() {\n    this.ctx.clearRect(0, 0, this.setting.width, this.setting.height);\n  }\n\n  update() {\n    this.ctx.clearRect(0, 0, this.setting.width, this.setting.height);\n\n    this.findAllOverlappedObjects();\n \n    this.objects.forEach((object) => {\n      //console.log(object);\n      if (object.isOverlap) {\n        this.draw(object, true);\n      } else {\n        this.draw(object);\n      }\n    });\n  }\n\n  getSelectedObject(cursorPos) {\n    let selectedObject;\n    this.objects.forEach((object) => {\n      const isInside = utils.isPointInPoly(cursorPos, object.points);\n      if (isInside) selectedObject = object;\n    });\n    return selectedObject;\n  }\n\n  checkOverlap(polyA, polyB) {\n    polyA = JSON.parse(JSON.stringify(polyA));\n    polyB = JSON.parse(JSON.stringify(polyB));\n\n    polyA.points.push(polyA.points[0]);\n    polyB.points.push(polyB.points[0]);\n\n    for (let i = 0; i < polyA.points.length - 1; i++) {\n      const sideA = [polyA.points[i], polyA.points[i + 1]];\n\n      for (let j = 0; j < polyB.points.length - 1; j++) {\n        const sideB = [polyB.points[j], polyB.points[j + 1]];\n\n        const isIntersect = utils.getIntersection(sideA, sideB);\n        if (isIntersect) return true;\n      }\n    }\n    return false;\n  }\n\n  findAllOverlappedObjects() {\n    const overlapObjectIndeces = [];\n    for (let i = 0; i < this.objects.length; i++) {\n      const objectA = this.objects[i];\n\n      for (let j = i + 1; j < this.objects.length; j++) {\n        const objectB = this.objects[j];\n\n        if (this.checkOverlap(objectA, objectB)) {\n          overlapObjectIndeces.push(i);\n          overlapObjectIndeces.push(j);\n        }\n      }\n    }\n\n    for(let i = 0; i < this.objects.length; i++) {\n      this.objects[i].isOverlap = overlapObjectIndeces.indexOf(i) >= 0 ? true : false; \n    }\n  }\n}\n\nexport default Canvas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./canvas.js\n// module id = 1\n// module chunks = 0","import utils from './utils';\n\nconst cursor = {\n  cursorDownPos: [0, 0],\n  cursorUpPos: [0, 0],\n\n  getOffset() {\n    return [this.cursorUpPos[0] - this.cursorDownPos[0],\n      this.cursorUpPos[1] - this.cursorDownPos[1]];\n\n  },\n  isCursorInPoly: utils.isPointInPoly,\n\n};\n\nexport default cursor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./cursor.js\n// module id = 2\n// module chunks = 0","\nexport default {\n  isPointInPoly(point, poly) {\n    let x = point[0],\n      y = point[1];\n\n    let inside = false;\n    for (let i = 0, j = poly.length - 1; i < poly.length; j = i++) {\n      let xi = poly[i][0],\n        yi = poly[i][1];\n      let xj = poly[j][0],\n        yj = poly[j][1];\n\n      const intersect = ((yi > y) != (yj > y))\n                    && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  },\n\n  getIntersection(segmentA, segmentB) {\n    let x1 = segmentA[0][0],\n      y1 = segmentA[0][1],\n      x2 = segmentA[1][0],\n      y2 = segmentA[1][1],\n\n      x3 = segmentB[0][0],\n      y3 = segmentB[0][1],\n      x4 = segmentB[1][0],\n      y4 = segmentB[1][1];\n\n    const x = ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) /\n                ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n    const y = ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) /\n                ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n\n    const isInside = this.isPointInPoly([x, y], [[x1, y1], [x3, y3], [x2, y2], [x4, y4]]);\n\n    return isInside;\n  },\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./utils.js\n// module id = 3\n// module chunks = 0","class Polygon {\n  constructor(points, strokeColor, fillColor) {\n    this.points = points;\n    this.strokeColor = strokeColor;\n    this.fillColor = fillColor;\n    this.isOverlap = false;\n  }\n\n  shift(offset) {\n    this.points.forEach((point) => {\n      point[0] += offset[0];\n      point[1] += offset[1];\n    });\n  }\n  \n  setFrame() {\n    const minX = this.points.reduce((min, item) => (item[0] < min ? item[0] : min), this.points[0][0]);\n\n    const maxX = this.points.reduce((min, item) => (item[0] > min ? item[0] : min), this.points[0][0]);\n\n    const minY = this.points.reduce((min, item) => (item[1] < min ? item[1] : min), this.points[0][1]);\n\n    const maxY = this.points.reduce((min, item) => (item[1] > min ? item[1] : min), this.points[0][1]);\n\n    this.frame = [[minX, minY], [maxX, minY], [maxX, maxY], [minX, maxY]];\n  }\n}\n\nexport default Polygon;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./polygon.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}